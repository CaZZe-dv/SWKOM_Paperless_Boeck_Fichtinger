version: '3.8'

services:
  restapi:
    build: .
    depends_on:
      - "db"
      - "rabbitmq"
    environment:
      ConnectionStrings__DefaultConnection: "Host=db;Database=postgres;Username=postgres;Password=postgres"
    ports:
      - "8081:8081"
    networks:
      - paperless-network
    volumes:
      - ./logs:/app/Logs

  webserver:
    build:
      context: ../Paperless_ui
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - paperless-network

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - paperless-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - paperless-network

  ocrworker:
    build:
      context: ../Paperless_OCR
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=ocr-results
    networks:
      - paperless-network
    depends_on:
      - rabbitmq
      - minio
    volumes:
      - ./uploads:/app/uploads
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - paperless-network
 

volumes:
  pgdata: {}
  minio-data:

networks:
  paperless-network:
    driver: bridge